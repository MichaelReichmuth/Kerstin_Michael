---
title: "Vision Zero - Testing"
format: pdf
editor: visual
---

#### Packages:

```{r}
library(sf)
library(ggplot2)
library(dplyr)
library(jsonlite)
library(lwgeom)
library(readxl)
library(scales)

library(zoo)
```

## Loading and Cleaning Data

Loading dataframes (GeoJSON Format)

```{r}
#| echo: false
strassen_wege <- st_read("strassen_wege.geojson")
velorouten <- st_read("velorouten.geojson")
unfaelle <- st_read("unfaelle.geojson")

velostadtplan <- st_read("velostadtplan.geojson")
```

#### Cleaning "velostrassen"

```{r}
velostrassen <- velostadtplan %>% filter(gml_id == "Velostrasse")
```

```{r}
velostrassen_union <- velostrassen %>%
  st_union() %>%
  st_line_merge()

# Schritt 2: Wieder aufteilen in einzelne Linien
velostrassen_cleaned <- st_cast(velostrassen_union, "LINESTRING") %>%
  st_as_sf() %>%
  mutate(temp_ID = paste0(row_number()))

```

Clear copies

```{r fig.width=8, fig.height=6}
velostrassen_cleaned_selection <- velostrassen_cleaned %>% filter(temp_ID %in% c(1, 3, 5, 6, 9, 11, 13, 17, 21, 22, 23, 29, 39, 45, 54, 58, 41, 30 , 37, 34, 43, 23, 56, 47, 49, 51, 26))

p <- ggplot() +
  geom_sf(data = strassen_wege, color = "grey", size = 1, alpha = 0.5) +
  geom_sf(data = velostrassen_cleaned_selection, aes(color = temp_ID), size = 1, alpha = 0.3) +
  geom_sf_text(data = velostrassen_cleaned_selection, aes(label = temp_ID), size = 1, color = "black", check_overlap = FALSE) +
  theme_void() +
  theme(legend.position = "none")

print(p)

ggsave("velorouten_grouped_selection.jpeg", plot = p, width = 12, height = 8, dpi = 600)

remove(velostrassen_cleaned, velostrassen_union)
```

#### Combine with "unfaelle" Dataset

```{r}
# Sicherheitscheck: gleiche CRS (Koordinatensystem)
unfaelle <- st_transform(unfaelle, st_crs(velostrassen_cleaned_selection))

# Optional: etwas Toleranzradius, falls Punkte nicht exakt auf Linie liegen (z.B. 10 Meter)
buffered_velo <- st_buffer(velostrassen_cleaned_selection, dist = 15)

# RÃ¤umlicher Join
unfaelle_with_match <- st_join(unfaelle, buffered_velo["temp_ID"])

# Neue Variable: TRUE/FALSE
unfaelle_with_match <- unfaelle_with_match %>%
  mutate(
    on_velostrasse = !is.na(temp_ID)  # TRUE wenn er zugewiesen wurde
  )

table(unfaelle_with_match$temp_ID)
```

```{r}
p <- ggplot() +
  geom_sf(data = strassen_wege, color = "grey", size = 1, alpha = 0.5) +
  geom_sf(data = velostrassen_cleaned_selection, aes(color = temp_ID), size = 1, alpha = 0.3) +
  geom_sf(data = unfaelle_with_match, aes(color = temp_ID), size = 0.1, alpha = 0.5) +
  theme_void() +
  theme(legend.position = "none")

print(p)

ggsave("accident_matching.jpeg", plot = p, width = 12, height = 8, dpi = 600)
```

#### Add street name

```{r}
velostrassen_ID_sheet <- read_excel("velostrassen_ID_sheet.xlsx")

unfaelle_with_match$temp_ID <- as.numeric(unfaelle_with_match$temp_ID)

# left-join
unfaelle_clean <- unfaelle_with_match %>%
  left_join(velostrassen_ID_sheet, by = "temp_ID")

table(unfaelle_clean$name)
```

#### Backtrack Implementation

```{r}
unfaelle_clean <- unfaelle_clean %>%
  mutate(
    date_accident = as.Date(paste0(jahr, "-", monat, "-01")),
    ym_accident = as.yearmon(date_accident),
    ym_reference = as.yearmon("2021-04"),           #anpassen sobald bekannt
    diff = ym_accident - ym_reference,
    diff_months = (ym_accident - ym_reference) * 12)

```

## Plotting Data

```{r}
table(unfaelle_clean$on_velostrasse, unfaelle_clean$fahrrd_bet)
```

```{r}
p <- unfaelle_clean %>%
  filter(on_velostrasse == TRUE) %>%
ggplot(aes(diff_months)) +
  geom_histogram(binwidth = 6, fill = "pink", color = "grey30") +
  geom_vline(xintercept = 0, color = "red", linetype = 1, size = 0.5) +
  geom_text(aes(x = 6, y = 15, label = "Transition to velostreet"), 
            vjust = -1, hjust = 1.2, color = "red", size = 4) +
  scale_x_continuous(breaks = seq(floor(min(unfaelle_clean$diff_months) / 12) * 12, 
                 ceiling(max(unfaelle_clean$diff_months) / 12) * 12, 
                 by = 12)) +
  xlab("Months relative to velostreet transition") +
  ylab("Amount of Accidents") +
  theme_minimal()

print(p)

ggsave("Plot_1.jpeg", plot = p, width = 12, height = 8, dpi = 600)
```

```{r}
ggplot(unfaelle_clean, aes(date_accident)) +
  geom_histogram()
```

```{r}

p <- unfaelle_clean %>%
  group_by(date_accident) %>%
  summarise(relative_ov = sum(on_velostrasse == TRUE) / n()) %>%
ggplot(aes(date_accident, relative_ov)) +
  geom_point() +
  geom_smooth(color = "blue") +
  geom_vline(xintercept = as.Date("2021-04-01"), color = "red", linetype = "dashed", size = 0.5) +
  geom_text(aes(x = as.Date("2021-04-01"), y = 0.1, label = "Estimated average year of implementation"), color = "red", vjust = -0.5, hjust = 0.5, size = 3) +
  scale_x_date(
    breaks = seq(from = min(unfaelle_clean$date_accident), 
                 to = max(unfaelle_clean$date_accident), 
                 by = "2 years"),  # Set breaks every 2 years
    date_labels = "%Y"  # Format the labels as years
) +
  scale_y_continuous(labels = scales::percent) +
  ggtitle("Proportion of accidents on velostrassen (before and after implementation)") +
  xlab("") +
  ylab("") +
  theme_minimal()

print(p)

ggsave("Plot_2.jpeg", plot = p, width = 12, height = 8, dpi = 600)
```

```{r}

#| fig-height: 6
#| fig-width: 8
p <- ggplot() +

plot <- ggplot() +
  geom_sf(data = buffered, aes(group = group_id, fill = group_id), size = 10, alpha = 0.3) +
  theme_void() +
  labs(title = "Velostrassen") +
  theme(legend.position = "none")

ggsave("velostrassen.jpeg", plot = plot, width = 12, height = 8, dpi = 300)
```

```{r fig.width=8, fig.height=6}
ggplot() +
  geom_sf(data = strassen_wege, color = "grey", size = 1, alpha = 0.5) +
  geom_sf(data = strassen_wege_hvs, color = "purple", size = 10, alpha = 0.3) +
  geom_sf(data = velorouten, color = "darkgreen", size = 10, alpha = 0.3) +
  geom_sf(data = unfaelle_velo_23, color = "red", size = 0.1) +
  theme_void() +
  labs(title = "Comparison of Veloroutes and Mainstreet (Accidents 2023)") +
  theme(legend.position = "none")

print(p)
```

```{r}
unfaelle_velo_1 <- unfaelle %>% filter(fahrrd_bet == "true" & jahr < 2017)
unfaelle_velo_2 <- unfaelle %>% filter(fahrrd_bet == "true" & jahr >= 2017)

plot <- ggplot() +
  geom_sf(data = strassen_wege, color = "grey", size = 1, alpha = 0.5) +
  geom_sf(data = unfaelle_velo_1, color = "red", size = 0.1) +
  geom_sf(data = unfaelle_velo_2, color = "green", size = 0.1) +
  theme_void() +
  labs(title = "Comparison of Veloroutes and Mainstreet") +
  theme(legend.position = "none")

ggsave("velorouten_plot_highres.jpeg", plot = plot, width = 12, height = 8, dpi = 300)
```

```{r}
table(unfaelle$schwere, unfaelle$fahrrd_bet)
```

```{r}
ggplot(unfaelle, aes(x= fahrrd_bet, fill = schwere)) +
  geom_bar(position = "fill")
```
